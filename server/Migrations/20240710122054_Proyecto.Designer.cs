// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240710122054_Proyecto")]
    partial class Proyecto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Entities.Proyecto", b =>
                {
                    b.Property<Guid>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("ProyectoId");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            ProyectoId = new Guid("84100c3f-15c4-44e0-b6ed-e853ab040666"),
                            FechaInicial = new DateTime(2024, 7, 10, 12, 20, 53, 626, DateTimeKind.Utc).AddTicks(3555),
                            Nombre = "EndPoint"
                        });
                });

            modelBuilder.Entity("server.Models.Entities.Rol", b =>
                {
                    b.Property<Guid>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = new Guid("88812dd5-c72f-43a6-9a66-0ed278945522"),
                            Nombre = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("server.Models.Entities.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<Guid?>("ProyectoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RolId")
                        .HasColumnType("uuid");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = new Guid("ee7e49fe-9fe6-4e6c-b9d3-238180781bde"),
                            Email = "carlos12@ŋmail.com",
                            Nombre = "Carlos"
                        });
                });

            modelBuilder.Entity("server.Models.Entities.Usuario", b =>
                {
                    b.HasOne("server.Models.Entities.Proyecto", "proyecto")
                        .WithMany("usuarios")
                        .HasForeignKey("ProyectoId");

                    b.HasOne("server.Models.Entities.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("proyecto");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("server.Models.Entities.Proyecto", b =>
                {
                    b.Navigation("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
